/**
 ** Please don't modify this file.
 ** This file was generated by the EntireX Java Wrapper
 ** from the IDL file EXAMREG.refactored.idl.
 **
 ** @author    Software AG
 ** @version   EntireX Wrapper, Version: 8.2.2.0.186, Date: 04 Nov 2011 (1.132.4.9)
 ** Generated: 2013-11-17 20:31:09.076 +0100
 **/

import java.lang.reflect.Method ;
import java.math.BigDecimal;

import com.softwareag.entirex.aci.*;

public class Scs_output {
	private BigDecimal _courseid;
	private String _degreeprogram;
	private BigDecimal _equivalentid;
	private BigDecimal _professorid;
	private String _coursename;
	private String _term;
	private BigDecimal _maxparticipants;
	private String _courseday;
	private String _coursetime;
	private String _courseroom;
	private BigDecimal _coursefinish;
	private BigDecimal _amountregistered;

	public Scs_output() {
	}

	public void set_courseid(BigDecimal _courseid) {
		this._courseid = _courseid;
	}

	public BigDecimal get_courseid() {
		if (this._courseid == null) {
			this._courseid = new BigDecimal(0);
		}
		return this._courseid;
	}

	public void set_degreeprogram(String _degreeprogram) {
		this._degreeprogram = _degreeprogram;
	}

	public String get_degreeprogram() {
		if (this._degreeprogram == null) {
			this._degreeprogram = "";
		}
		return this._degreeprogram;
	}

	public void set_equivalentid(BigDecimal _equivalentid) {
		this._equivalentid = _equivalentid;
	}

	public BigDecimal get_equivalentid() {
		if (this._equivalentid == null) {
			this._equivalentid = new BigDecimal(0);
		}
		return this._equivalentid;
	}

	public void set_professorid(BigDecimal _professorid) {
		this._professorid = _professorid;
	}

	public BigDecimal get_professorid() {
		if (this._professorid == null) {
			this._professorid = new BigDecimal(0);
		}
		return this._professorid;
	}

	public void set_coursename(String _coursename) {
		this._coursename = _coursename;
	}

	public String get_coursename() {
		if (this._coursename == null) {
			this._coursename = "";
		}
		return this._coursename;
	}

	public void set_term(String _term) {
		this._term = _term;
	}

	public String get_term() {
		if (this._term == null) {
			this._term = "";
		}
		return this._term;
	}

	public void set_maxparticipants(BigDecimal _maxparticipants) {
		this._maxparticipants = _maxparticipants;
	}

	public BigDecimal get_maxparticipants() {
		if (this._maxparticipants == null) {
			this._maxparticipants = new BigDecimal(0);
		}
		return this._maxparticipants;
	}

	public void set_courseday(String _courseday) {
		this._courseday = _courseday;
	}

	public String get_courseday() {
		if (this._courseday == null) {
			this._courseday = "";
		}
		return this._courseday;
	}

	public void set_coursetime(String _coursetime) {
		this._coursetime = _coursetime;
	}

	public String get_coursetime() {
		if (this._coursetime == null) {
			this._coursetime = "";
		}
		return this._coursetime;
	}

	public void set_courseroom(String _courseroom) {
		this._courseroom = _courseroom;
	}

	public String get_courseroom() {
		if (this._courseroom == null) {
			this._courseroom = "";
		}
		return this._courseroom;
	}

	public void set_coursefinish(BigDecimal _coursefinish) {
		this._coursefinish = _coursefinish;
	}

	public BigDecimal get_coursefinish() {
		if (this._coursefinish == null) {
			this._coursefinish = new BigDecimal(0);
		}
		return this._coursefinish;
	}

	public void set_amountregistered(BigDecimal _amountregistered) {
		this._amountregistered = _amountregistered;
	}

	public BigDecimal get_amountregistered() {
		if (this._amountregistered == null) {
			this._amountregistered = new BigDecimal(0);
		}
		return this._amountregistered;
	}

	public void add(Marshal marshal) throws BrokerException {
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataA(_degreeprogram, 32);
		marshal.addDataN(_equivalentid, 2, 0);
		marshal.addDataN(_professorid, 9, 0);
		marshal.addDataA(_coursename, 32);
		marshal.addDataA(_term, 32);
		marshal.addDataN(_maxparticipants, 9, 0);
		marshal.addDataA(_courseday, 32);
		marshal.addDataA(_coursetime, 32);
		marshal.addDataA(_courseroom, 32);
		marshal.addDataN(_coursefinish, 1, 0);
		marshal.addDataN(_amountregistered, 9, 0);
	}

	public void get(Marshal marshal) throws BrokerException {
		_courseid = marshal.getDataN(9, 0);
		_degreeprogram = marshal.getDataA(32);
		_equivalentid = marshal.getDataN(2, 0);
		_professorid = marshal.getDataN(9, 0);
		_coursename = marshal.getDataA(32);
		_term = marshal.getDataA(32);
		_maxparticipants = marshal.getDataN(9, 0);
		_courseday = marshal.getDataA(32);
		_coursetime = marshal.getDataA(32);
		_courseroom = marshal.getDataA(32);
		_coursefinish = marshal.getDataN(1, 0);
		_amountregistered = marshal.getDataN(9, 0);
	}
	public static final Method enterStubMethod = getStubMethod("enterClientStub");
	public static final Method leaveStubMethod = getStubMethod("leaveClientStub");

	private static Method getStubMethod(String name) {
		Method method = null ;
		try {
			method = RPCService.class.getMethod(name , null ) ;
		} catch ( Exception ex ) {}
		return method ;
	}
	private void enterStub() {
		if ( enterStubMethod != null ) {
			try {
				enterStubMethod.invoke ( this , null ) ;
			} catch ( Exception ex ) {} 
		}
	}
	private void leaveStub() {
		if ( leaveStubMethod != null ) {
			try {
				leaveStubMethod.invoke ( this , null ) ;
			} catch ( Exception ex ) {}
		}
	}
}
