/**
 ** Please don't modify this file.
 ** This file was generated by the EntireX Java Wrapper
 ** from the IDL file EXAMREG.refactored.idl.
 **
 ** @author    Software AG
 ** @version   EntireX Wrapper, Version: 8.2.2.0.186, Date: 04 Nov 2011 (1.132.4.9)
 ** Generated: 2013-11-17 20:31:09.060 +0100
 **/

import java.lang.reflect.Method ;
import java.math.BigDecimal;

import com.softwareag.entirex.aci.*;

public class Examreg extends RPCService {

	private final boolean generatedWithInnerClasses = false;
	public static final String DEFAULT_BROKERID = "192.168.0.201:1971";
	public static final String DEFAULT_SERVER = "RPC/SRV1/CALLNAT";

	// IDL program 'SAT'
	// IDL program 'SAT'
	private String sat_message;

	private final static byte[] SAT_FORMAT = // from IDL
			( "OA10,0SA40,0." ).getBytes();

	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	// IDL program 'SCA'
	private String sca_message;

	private final static byte[] SCA_FORMAT = // from IDL
			( "OP9,0OA32,0OP2,0OP9,0OA32,0OA32,0OP9,0OA32,0OA32,0OA32,"
			  + "0SA40,0." ).getBytes();

	// IDL program 'SCAID'
	private BigDecimal scaid_courseid;

	private final static byte[] SCAID_FORMAT = // from IDL
			( "SP9,0." ).getBytes();

	// IDL program 'SCD'
	// IDL program 'SCD'
	// IDL program 'SCD'
	private String scd_message;

	private final static byte[] SCD_FORMAT = // from IDL
			( "OP9,0OP9,0SA40,0." ).getBytes();

	// IDL program 'SCI'
	// IDL program 'SCI'
	private String sci_degreeprogram;

	// IDL program 'SCI'
	private BigDecimal sci_equivalentid;

	// IDL program 'SCI'
	private BigDecimal sci_professorid;

	// IDL program 'SCI'
	private String _coursename;

	// IDL program 'SCI'
	private String sci_term;

	// IDL program 'SCI'
	private BigDecimal _maxparticipants;

	// IDL program 'SCI'
	private String _courseday;

	// IDL program 'SCI'
	private String _coursetime;

	// IDL program 'SCI'
	private String _courseroom;

	// IDL program 'SCI'
	private BigDecimal _coursefinish;

	// IDL program 'SCI'
	private BigDecimal sci_amountregistered;

	// IDL program 'SCI'
	private String sci_message;

	private final static byte[] SCI_FORMAT = // from IDL
			( "OP9,0SA32,0SP2,0SP9,0SA32,0SA32,0SP9,0SA32,0SA32,0SA32,0SP1,"
			  + "0SP9,0SA40,0." ).getBytes();

	// IDL program 'SCI2'
	// IDL program 'SCI2'
	private _output[] sci2_output = new _output[0];

	// IDL program 'SCI2'
	private String sci2_message;

	private final static byte[] SCI2_FORMAT = // from IDL
			( "OP9,0SG(S=7,#OUTPUT,U)1,1,0SP9,0SA32,0SA32,0SA10,0SG1,0SA40,"
			  + "0." ).getBytes();

	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	// IDL program 'SCM'
	private String scm_message;

	private final static byte[] SCM_FORMAT = // from IDL
			( "OP9,0OP9,0OA32,0OA32,0OP9,0OA32,0OA32,0OA32,0OP1,0SA40,0." ).getBytes();

	// IDL program 'SCR'
	// IDL program 'SCR'
	// IDL program 'SCR'
	private String scr_message;

	private final static byte[] SCR_FORMAT = // from IDL
			( "OP9,0OP9,0SA40,0." ).getBytes();

	// IDL program 'SCS'
	private Scs_output[] scs_output = new Scs_output[0];

	private final static byte[] SCS_FORMAT = // from IDL
			( "SG(S=10,SCS#OUTPUT,U)1,1,0SP9,0SA32,0SP2,0SP9,0SA32,0SA32,"
			  + "0SP9,0SA32,0SA32,0SA32,0SP1,0SP9,0SG1,0." ).getBytes();

	// IDL program 'SEA'
	// IDL program 'SEA'
	// IDL program 'SEA'
	// IDL program 'SEA'
	// IDL program 'SEA'
	// IDL program 'SEA'
	// IDL program 'SEA'
	private String sea_message;

	private final static byte[] SEA_FORMAT = // from IDL
			( "OP9,0OP9,0OP9,0OA32,0OA32,0OA32,0SA40,0." ).getBytes();

	// IDL program 'SEAID'
	private BigDecimal _examid;

	private final static byte[] SEAID_FORMAT = // from IDL
			( "SP9,0." ).getBytes();

	// IDL program 'SED'
	// IDL program 'SED'
	// IDL program 'SED'
	private String sed_message;

	private final static byte[] SED_FORMAT = // from IDL
			( "OP9,0OP9,0SA40,0." ).getBytes();

	// IDL program 'SEI'
	// IDL program 'SEI'
	private BigDecimal sei_courseid;

	// IDL program 'SEI'
	private BigDecimal sei_professorid;

	// IDL program 'SEI'
	private String _examdate;

	// IDL program 'SEI'
	private String _examtime;

	// IDL program 'SEI'
	private String _examroom;

	// IDL program 'SEI'
	private BigDecimal sei_amountregistered;

	// IDL program 'SEI'
	private BigDecimal sei_equivalentid;

	// IDL program 'SEI'
	private String sei_message;

	private final static byte[] SEI_FORMAT = // from IDL
			( "OP9,0SP9,0SP9,0SA32,0SA32,0SA32,0SP9,0SP2,0SA40,0." ).getBytes();

	// IDL program 'SEI2'
	// IDL program 'SEI2'
	private _output[] sei2_output = new _output[0];

	// IDL program 'SEI2'
	private String sei2_message;

	private final static byte[] SEI2_FORMAT = // from IDL
			( "OP9,0SG(S=7,#OUTPUT,U)1,1,0SP9,0SA32,0SA32,0SA10,0SG1,0SA40,"
			  + "0." ).getBytes();

	// IDL program 'SEM'
	// IDL program 'SEM'
	// IDL program 'SEM'
	// IDL program 'SEM'
	// IDL program 'SEM'
	// IDL program 'SEM'
	private String sem_message;

	private final static byte[] SEM_FORMAT = // from IDL
			( "OP9,0OP9,0OA32,0OA32,0OA32,0SA40,0." ).getBytes();

	// IDL program 'SER'
	// IDL program 'SER'
	// IDL program 'SER'
	private String ser_message;

	private final static byte[] SER_FORMAT = // from IDL
			( "OP9,0OP9,0SA40,0." ).getBytes();

	// IDL program 'SES'
	private Ses_output[] ses_output = new Ses_output[0];

	private final static byte[] SES_FORMAT = // from IDL
			( "SG(S=10,SES#OUTPUT,U)1,1,0SP9,0SP9,0SA32,0SP9,0SA32,0SP9,"
			  + "0SP9,0SA32,0SA32,0SA32,0SG1,0." ).getBytes();

	// IDL program 'STG'
	// IDL program 'STG'
	// IDL program 'STG'
	// IDL program 'STG'
	private String stg_message;

	private final static byte[] STG_FORMAT = // from IDL
			( "OP9,0OP2,0ON1,1SA40,0." ).getBytes();

	// IDL program 'STI'
	// IDL program 'STI'
	private String sti_firstname;

	// IDL program 'STI'
	private String sti_lastname;

	// IDL program 'STI'
	private BigDecimal sti_term;

	// IDL program 'STI'
	private String sti_dob;

	// IDL program 'STI'
	private String sti_degreeprogram;

	// IDL program 'STI'
	private String[] _coursenames = new String[10];

	// IDL program 'STI'
	private BigDecimal[] _courseids = new BigDecimal[10];

	// IDL program 'STI'
	private BigDecimal[] _grades = new BigDecimal[10];

	// IDL program 'STI'
	private BigDecimal _finalgrade;

	// IDL program 'STI'
	private String sti_message;

	private final static byte[] STI_FORMAT = // from IDL
			( "OP9,0SA32,0SA32,0SP3,0SA10,0SA32,0SA32,0,10SP9,0,10SN1,1,"
			  + "10SP1,1SA40,0." ).getBytes();

	// IDL program 'STP'
	// IDL program 'STP'
	private String stp_message;

	private final static byte[] STP_FORMAT = // from IDL
			( "OP9,0SA40,0." ).getBytes();

	// IDL program 'SUPA'
	// IDL program 'SUPA'
	// IDL program 'SUPA'
	// IDL program 'SUPA'
	// IDL program 'SUPA'
	// IDL program 'SUPA'
	private String supa_message;

	private final static byte[] SUPA_FORMAT = // from IDL
			( "OP9,0OA32,0OA32,0OA32,0OA32,0SA40,0." ).getBytes();

	// IDL program 'SUPAID'
	private BigDecimal _profid;

	private final static byte[] SUPAID_FORMAT = // from IDL
			( "SP9,0." ).getBytes();

	// IDL program 'SUPI'
	// IDL program 'SUPI'
	private String _pfirstname;

	// IDL program 'SUPI'
	private String _plastname;

	// IDL program 'SUPI'
	private String _ptitel;

	// IDL program 'SUPI'
	private String _pchair;

	// IDL program 'SUPI'
	private String supi_message;

	private final static byte[] SUPI_FORMAT = // from IDL
			( "OP9,0SA32,0SA32,0SA32,0SA32,0SA40,0." ).getBytes();

	// IDL program 'SUPM'
	// IDL program 'SUPM'
	// IDL program 'SUPM'
	// IDL program 'SUPM'
	// IDL program 'SUPM'
	// IDL program 'SUPM'
	private String supm_message;

	private final static byte[] SUPM_FORMAT = // from IDL
			( "OP9,0OA32,0OA32,0OA32,0OA32,0SA40,0." ).getBytes();

	// IDL program 'SUPS'
	private Sups_output[] sups_output = new Sups_output[0];

	private final static byte[] SUPS_FORMAT = // from IDL
			( "SG(S=11,SUPS#OUTPUT,U)1,1,0SP9,0SA32,0SA32,0SA32,0SA32,"
			  + "0SA40,0SG1,0." ).getBytes();

	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	// IDL program 'SUSA'
	private String susa_message;

	private final static byte[] SUSA_FORMAT = // from IDL
			( "OP9,0OA32,0OA32,0OA32,0OA32,0OA32,0OA10,0OA32,0OA32,0SA40,0." ).getBytes();

	// IDL program 'SUSAID'
	private BigDecimal _studentid;

	private final static byte[] SUSAID_FORMAT = // from IDL
			( "SP9,0." ).getBytes();

	// IDL program 'SUSI'
	// IDL program 'SUSI'
	private String susi_firstname;

	// IDL program 'SUSI'
	private String susi_lastname;

	// IDL program 'SUSI'
	private String _addressline1;

	// IDL program 'SUSI'
	private String _addressline2;

	// IDL program 'SUSI'
	private String susi_degreeprogram;

	// IDL program 'SUSI'
	private String _email;

	// IDL program 'SUSI'
	private String _phone;

	// IDL program 'SUSI'
	private String susi_dob;

	// IDL program 'SUSI'
	private BigDecimal susi_term;

	// IDL program 'SUSI'
	private String _registered;

	// IDL program 'SUSI'
	private BigDecimal _active;

	// IDL program 'SUSI'
	private String susi_message;

	private final static byte[] SUSI_FORMAT = // from IDL
			( "OP9,0SA32,0SA32,0SA32,0SA32,0SA32,0SA32,0SA32,0SA10,0SP3,"
			  + "0SA10,0SP1,0SA40,0." ).getBytes();

	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	// IDL program 'SUSM'
	private String susm_message;

	private final static byte[] SUSM_FORMAT = // from IDL
			( "OP9,0OA32,0OA32,0OA32,0OA32,0OA32,0OA32,0OA10,0OP3,0OP1,"
			  + "0SA40,0." ).getBytes();

	// IDL program 'SUSS'
	private Suss_output[] suss_output = new Suss_output[0];

	private final static byte[] SUSS_FORMAT = // from IDL
			( "SG(S=11,SUSS#OUTPUT,U)1,1,0SP17,0SA10,0SA32,0SA10,0SP3,0SP1,"
			  + "0SA10,0SA10,0SA32,0SA32,0SA32,0SA32,0SG1,0." ).getBytes();

	public Examreg() {
		super();
	}

	public Examreg(Broker broker) {
		this(broker, DEFAULT_SERVER);
	}

	public Examreg(BrokerService bs) {
		this(bs.getBroker(), bs.toString());
	}

	public Examreg(Broker broker, String serverAddr) {
		super(broker, serverAddr, "EXAMREG", true);
	}

	public static String getStubVersion() {
		return "EntireX RPC for Java Stub Version=8.2.2.0, Patch Level=186";
	}

	// IDL program 'SAT'
	public String getSat_message() {
		if (this.sat_message == null) {
			this.sat_message = "";
		}
		return this.sat_message;
	}

	public void sat(String _command) throws BrokerException {

		enterStub();
		buildHeader (SAT_FORMAT, "2", 0, 40, "SAT", true, 1110, false, false, 2020);
		marshal.addDataA(_command, 10);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		sat_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCA'
	public String getSca_message() {
		if (this.sca_message == null) {
			this.sca_message = "";
		}
		return this.sca_message;
	}

	public void sca(BigDecimal _courseid, String _degreeprogram, BigDecimal _equivalentid, BigDecimal _professorid, String _coursename, String _term, BigDecimal _maxparticipants, String _courseday, String _coursetime, String _courseroom) throws BrokerException {

		enterStub();
		buildHeader (SCA_FORMAT, "11", 0, 40, "SCA", true, 1110, false, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataA(_degreeprogram, 32);
		marshal.addDataN(_equivalentid, 2, 0);
		marshal.addDataN(_professorid, 9, 0);
		marshal.addDataA(_coursename, 32);
		marshal.addDataA(_term, 32);
		marshal.addDataN(_maxparticipants, 9, 0);
		marshal.addDataA(_courseday, 32);
		marshal.addDataA(_coursetime, 32);
		marshal.addDataA(_courseroom, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(3);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		sca_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCAID'
	public BigDecimal getScaid_courseid() {
		if (this.scaid_courseid == null) {
			this.scaid_courseid = new BigDecimal(0);
		}
		return this.scaid_courseid;
	}

	public void scaid() throws BrokerException {

		enterStub();
		buildHeader (SCAID_FORMAT, "1", 0, 10, "SCAID", true, 1110, false, false, 2020);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);

		callServer();

		scaid_courseid = marshal.getDataN(9, 0);

		leaveStub();


	}

	// IDL program 'SCD'
	public String getScd_message() {
		if (this.scd_message == null) {
			this.scd_message = "";
		}
		return this.scd_message;
	}

	public void scd(BigDecimal _courseid, BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (SCD_FORMAT, "3", 0, 40, "SCD", true, 1110, false, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		scd_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCI'
	public String getSci_degreeprogram() {
		if (this.sci_degreeprogram == null) {
			this.sci_degreeprogram = "";
		}
		return this.sci_degreeprogram;
	}

	// IDL program 'SCI'
	public BigDecimal getSci_equivalentid() {
		if (this.sci_equivalentid == null) {
			this.sci_equivalentid = new BigDecimal(0);
		}
		return this.sci_equivalentid;
	}

	// IDL program 'SCI'
	public BigDecimal getSci_professorid() {
		if (this.sci_professorid == null) {
			this.sci_professorid = new BigDecimal(0);
		}
		return this.sci_professorid;
	}

	// IDL program 'SCI'
	public String get_coursename() {
		if (this._coursename == null) {
			this._coursename = "";
		}
		return this._coursename;
	}

	// IDL program 'SCI'
	public String getSci_term() {
		if (this.sci_term == null) {
			this.sci_term = "";
		}
		return this.sci_term;
	}

	// IDL program 'SCI'
	public BigDecimal get_maxparticipants() {
		if (this._maxparticipants == null) {
			this._maxparticipants = new BigDecimal(0);
		}
		return this._maxparticipants;
	}

	// IDL program 'SCI'
	public String get_courseday() {
		if (this._courseday == null) {
			this._courseday = "";
		}
		return this._courseday;
	}

	// IDL program 'SCI'
	public String get_coursetime() {
		if (this._coursetime == null) {
			this._coursetime = "";
		}
		return this._coursetime;
	}

	// IDL program 'SCI'
	public String get_courseroom() {
		if (this._courseroom == null) {
			this._courseroom = "";
		}
		return this._courseroom;
	}

	// IDL program 'SCI'
	public BigDecimal get_coursefinish() {
		if (this._coursefinish == null) {
			this._coursefinish = new BigDecimal(0);
		}
		return this._coursefinish;
	}

	// IDL program 'SCI'
	public BigDecimal getSci_amountregistered() {
		if (this.sci_amountregistered == null) {
			this.sci_amountregistered = new BigDecimal(0);
		}
		return this.sci_amountregistered;
	}

	// IDL program 'SCI'
	public String getSci_message() {
		if (this.sci_message == null) {
			this.sci_message = "";
		}
		return this.sci_message;
	}

	public void sci(BigDecimal _courseid) throws BrokerException {

		enterStub();
		buildHeader (SCI_FORMAT, "13", 0, 267, "SCI", true, 1110, false, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 2, 0);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 1, 0);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		sci_degreeprogram = marshal.getDataA(32);
		sci_equivalentid = marshal.getDataN(2, 0);
		sci_professorid = marshal.getDataN(9, 0);
		_coursename = marshal.getDataA(32);
		sci_term = marshal.getDataA(32);
		_maxparticipants = marshal.getDataN(9, 0);
		_courseday = marshal.getDataA(32);
		_coursetime = marshal.getDataA(32);
		_courseroom = marshal.getDataA(32);
		_coursefinish = marshal.getDataN(1, 0);
		sci_amountregistered = marshal.getDataN(9, 0);
		sci_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCI2'
	public _output[] getSci2_output() {
		if (this.sci2_output == null) {
			this.sci2_output = new _output[0];
		}
		return this.sci2_output;
	}

	// IDL program 'SCI2'
	public _output getSci2_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.sci2_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'sci2_output'");
		}
		return this.sci2_output[index0];
	}

	// IDL program 'SCI2'
	public String getSci2_message() {
		if (this.sci2_message == null) {
			this.sci2_message = "";
		}
		return this.sci2_message;
	}

	public void sci2(BigDecimal _courseid) throws BrokerException {

		enterStub();
		buildHeader (SCI2_FORMAT, "8", 0, 124, "SCI2", true, 2000, true, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		int sci2_outputIndex0 = super.marshal.getArrayIndex();
		sci2_output = new _output[sci2_outputIndex0];
		for (int i0=0; i0<sci2_outputIndex0; i0++) {
				sci2_output[i0] = new _output();
			sci2_output[i0].get(marshal);
		}
		sci2_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCM'
	public String getScm_message() {
		if (this.scm_message == null) {
			this.scm_message = "";
		}
		return this.scm_message;
	}

	public void scm(BigDecimal _courseid, BigDecimal _professorid, String _coursename, String _term, BigDecimal _maxparticipants, String _courseday, String _coursetime, String _courseroom, BigDecimal _coursefinish) throws BrokerException {

		enterStub();
		buildHeader (SCM_FORMAT, "10", 0, 40, "SCM", true, 1110, false, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataN(_professorid, 9, 0);
		marshal.addDataA(_coursename, 32);
		marshal.addDataA(_term, 32);
		marshal.addDataN(_maxparticipants, 9, 0);
		marshal.addDataA(_courseday, 32);
		marshal.addDataA(_coursetime, 32);
		marshal.addDataA(_courseroom, 32);
		marshal.addDataN(_coursefinish, 1, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(2);
		scm_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCR'
	public String getScr_message() {
		if (this.scr_message == null) {
			this.scr_message = "";
		}
		return this.scr_message;
	}

	public void scr(BigDecimal _courseid, BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (SCR_FORMAT, "3", 0, 40, "SCR", true, 1110, false, false, 2020);
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		scr_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SCS'
	public Scs_output[] getScs_output() {
		if (this.scs_output == null) {
			this.scs_output = new Scs_output[0];
		}
		return this.scs_output;
	}

	// IDL program 'SCS'
	public Scs_output getScs_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.scs_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'scs_output'");
		}
		return this.scs_output[index0];
	}

	public void scs() throws BrokerException {

		enterStub();
		buildHeader (SCS_FORMAT, "14", 0, 237, "SCS", true, 2000, true, false, 2020);

		callServer();

		int scs_outputIndex0 = super.marshal.getArrayIndex();
		scs_output = new Scs_output[scs_outputIndex0];
		for (int i0=0; i0<scs_outputIndex0; i0++) {
				scs_output[i0] = new Scs_output();
			scs_output[i0].get(marshal);
		}

		leaveStub();


	}

	// IDL program 'SEA'
	public String getSea_message() {
		if (this.sea_message == null) {
			this.sea_message = "";
		}
		return this.sea_message;
	}

	public void sea(BigDecimal _examid, BigDecimal _courseid, BigDecimal _professorid, String _examdate, String _examtime, String _examroom) throws BrokerException {

		enterStub();
		buildHeader (SEA_FORMAT, "7", 0, 40, "SEA", true, 1110, false, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		marshal.addDataN(_courseid, 9, 0);
		marshal.addDataN(_professorid, 9, 0);
		marshal.addDataA(_examdate, 32);
		marshal.addDataA(_examtime, 32);
		marshal.addDataA(_examroom, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		sea_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SEAID'
	public BigDecimal get_examid() {
		if (this._examid == null) {
			this._examid = new BigDecimal(0);
		}
		return this._examid;
	}

	public void seaid() throws BrokerException {

		enterStub();
		buildHeader (SEAID_FORMAT, "1", 0, 10, "SEAID", true, 1110, false, false, 2020);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);

		callServer();

		_examid = marshal.getDataN(9, 0);

		leaveStub();


	}

	// IDL program 'SED'
	public String getSed_message() {
		if (this.sed_message == null) {
			this.sed_message = "";
		}
		return this.sed_message;
	}

	public void sed(BigDecimal _examid, BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (SED_FORMAT, "3", 0, 40, "SED", true, 1110, false, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		sed_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SEI'
	public BigDecimal getSei_courseid() {
		if (this.sei_courseid == null) {
			this.sei_courseid = new BigDecimal(0);
		}
		return this.sei_courseid;
	}

	// IDL program 'SEI'
	public BigDecimal getSei_professorid() {
		if (this.sei_professorid == null) {
			this.sei_professorid = new BigDecimal(0);
		}
		return this.sei_professorid;
	}

	// IDL program 'SEI'
	public String get_examdate() {
		if (this._examdate == null) {
			this._examdate = "";
		}
		return this._examdate;
	}

	// IDL program 'SEI'
	public String get_examtime() {
		if (this._examtime == null) {
			this._examtime = "";
		}
		return this._examtime;
	}

	// IDL program 'SEI'
	public String get_examroom() {
		if (this._examroom == null) {
			this._examroom = "";
		}
		return this._examroom;
	}

	// IDL program 'SEI'
	public BigDecimal getSei_amountregistered() {
		if (this.sei_amountregistered == null) {
			this.sei_amountregistered = new BigDecimal(0);
		}
		return this.sei_amountregistered;
	}

	// IDL program 'SEI'
	public BigDecimal getSei_equivalentid() {
		if (this.sei_equivalentid == null) {
			this.sei_equivalentid = new BigDecimal(0);
		}
		return this.sei_equivalentid;
	}

	// IDL program 'SEI'
	public String getSei_message() {
		if (this.sei_message == null) {
			this.sei_message = "";
		}
		return this.sei_message;
	}

	public void sei(BigDecimal _examid) throws BrokerException {

		enterStub();
		buildHeader (SEI_FORMAT, "9", 0, 169, "SEI", true, 1110, false, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 2, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		sei_courseid = marshal.getDataN(9, 0);
		sei_professorid = marshal.getDataN(9, 0);
		_examdate = marshal.getDataA(32);
		_examtime = marshal.getDataA(32);
		_examroom = marshal.getDataA(32);
		sei_amountregistered = marshal.getDataN(9, 0);
		sei_equivalentid = marshal.getDataN(2, 0);
		sei_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SEI2'
	public _output[] getSei2_output() {
		if (this.sei2_output == null) {
			this.sei2_output = new _output[0];
		}
		return this.sei2_output;
	}

	// IDL program 'SEI2'
	public _output getSei2_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.sei2_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'sei2_output'");
		}
		return this.sei2_output[index0];
	}

	// IDL program 'SEI2'
	public String getSei2_message() {
		if (this.sei2_message == null) {
			this.sei2_message = "";
		}
		return this.sei2_message;
	}

	public void sei2(BigDecimal _examid) throws BrokerException {

		enterStub();
		buildHeader (SEI2_FORMAT, "8", 0, 124, "SEI2", true, 2000, true, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		int sei2_outputIndex0 = super.marshal.getArrayIndex();
		sei2_output = new _output[sei2_outputIndex0];
		for (int i0=0; i0<sei2_outputIndex0; i0++) {
				sei2_output[i0] = new _output();
			sei2_output[i0].get(marshal);
		}
		sei2_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SEM'
	public String getSem_message() {
		if (this.sem_message == null) {
			this.sem_message = "";
		}
		return this.sem_message;
	}

	public void sem(BigDecimal _examid, BigDecimal _professorid, String _examdate, String _examtime, String _examroom) throws BrokerException {

		enterStub();
		buildHeader (SEM_FORMAT, "6", 0, 40, "SEM", true, 1110, false, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		marshal.addDataN(_professorid, 9, 0);
		marshal.addDataA(_examdate, 32);
		marshal.addDataA(_examtime, 32);
		marshal.addDataA(_examroom, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		sem_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SER'
	public String getSer_message() {
		if (this.ser_message == null) {
			this.ser_message = "";
		}
		return this.ser_message;
	}

	public void ser(BigDecimal _examid, BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (SER_FORMAT, "3", 0, 40, "SER", true, 1110, false, false, 2020);
		marshal.addDataN(_examid, 9, 0);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(10);
		ser_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SES'
	public Ses_output[] getSes_output() {
		if (this.ses_output == null) {
			this.ses_output = new Ses_output[0];
		}
		return this.ses_output;
	}

	// IDL program 'SES'
	public Ses_output getSes_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.ses_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'ses_output'");
		}
		return this.ses_output[index0];
	}

	public void ses() throws BrokerException {

		enterStub();
		buildHeader (SES_FORMAT, "12", 0, 210, "SES", true, 2000, true, false, 2020);

		callServer();

		int ses_outputIndex0 = super.marshal.getArrayIndex();
		ses_output = new Ses_output[ses_outputIndex0];
		for (int i0=0; i0<ses_outputIndex0; i0++) {
				ses_output[i0] = new Ses_output();
			ses_output[i0].get(marshal);
		}

		leaveStub();


	}

	// IDL program 'STG'
	public String getStg_message() {
		if (this.stg_message == null) {
			this.stg_message = "";
		}
		return this.stg_message;
	}

	public void stg(BigDecimal _studentid, BigDecimal _equivalentid, BigDecimal _grade) throws BrokerException {

		enterStub();
		buildHeader (STG_FORMAT, "4", 0, 40, "STG", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		marshal.addDataN(_equivalentid, 2, 0);
		marshal.addDataN(_grade, 1, 1);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(3);
		if (!super.compression) super.marshal.skipData(3);
		stg_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'STI'
	public String getSti_firstname() {
		if (this.sti_firstname == null) {
			this.sti_firstname = "";
		}
		return this.sti_firstname;
	}

	// IDL program 'STI'
	public String getSti_lastname() {
		if (this.sti_lastname == null) {
			this.sti_lastname = "";
		}
		return this.sti_lastname;
	}

	// IDL program 'STI'
	public BigDecimal getSti_term() {
		if (this.sti_term == null) {
			this.sti_term = new BigDecimal(0);
		}
		return this.sti_term;
	}

	// IDL program 'STI'
	public String getSti_dob() {
		if (this.sti_dob == null) {
			this.sti_dob = "";
		}
		return this.sti_dob;
	}

	// IDL program 'STI'
	public String getSti_degreeprogram() {
		if (this.sti_degreeprogram == null) {
			this.sti_degreeprogram = "";
		}
		return this.sti_degreeprogram;
	}

	// IDL program 'STI'
	public String[] get_coursenames() {
		if (this._coursenames == null) {
			this._coursenames = new String[10];
		}
		return this._coursenames;
	}

	// IDL program 'STI'
	public String get_coursenames(int index0) throws ArrayIndexOutOfBoundsException {
		if (this._coursenames == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter '_coursenames'");
		}
		if (index0 >= 10) {
			throw new ArrayIndexOutOfBoundsException("at least one index is greater than the maximum allowed size");
		}
		return this._coursenames[index0];
	}

	// IDL program 'STI'
	public BigDecimal[] get_courseids() {
		if (this._courseids == null) {
			this._courseids = new BigDecimal[10];
		}
		return this._courseids;
	}

	// IDL program 'STI'
	public BigDecimal get_courseids(int index0) throws ArrayIndexOutOfBoundsException {
		if (this._courseids == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter '_courseids'");
		}
		if (index0 >= 10) {
			throw new ArrayIndexOutOfBoundsException("at least one index is greater than the maximum allowed size");
		}
		return this._courseids[index0];
	}

	// IDL program 'STI'
	public BigDecimal[] get_grades() {
		if (this._grades == null) {
			this._grades = new BigDecimal[10];
		}
		return this._grades;
	}

	// IDL program 'STI'
	public BigDecimal get_grades(int index0) throws ArrayIndexOutOfBoundsException {
		if (this._grades == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter '_grades'");
		}
		if (index0 >= 10) {
			throw new ArrayIndexOutOfBoundsException("at least one index is greater than the maximum allowed size");
		}
		return this._grades[index0];
	}

	// IDL program 'STI'
	public BigDecimal get_finalgrade() {
		if (this._finalgrade == null) {
			this._finalgrade = new BigDecimal(0);
		}
		return this._finalgrade;
	}

	// IDL program 'STI'
	public String getSti_message() {
		if (this.sti_message == null) {
			this.sti_message = "";
		}
		return this.sti_message;
	}

	public void sti(BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (STI_FORMAT, "11", 0, 603, "STI", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 3, 0);
		if (!super.compression) marshal.addDataA(" ", 10);
		if (!super.compression) marshal.addDataA(" ", 32);
for (int i0=0; i0<10; i0++) 		if (!super.compression) marshal.addDataA(" ", 32);
for (int i0=0; i0<10; i0++) 		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);
for (int i0=0; i0<10; i0++) 		if (!super.compression) marshal.addDataN(new BigDecimal(0), 1, 1);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 1, 1);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		sti_firstname = marshal.getDataA(32);
		sti_lastname = marshal.getDataA(32);
		sti_term = marshal.getDataN(3, 0);
		sti_dob = marshal.getDataA(10);
		sti_degreeprogram = marshal.getDataA(32);
		_coursenames = new String[10];
		for (int i0=0; i0<10; i0++) _coursenames[i0] = marshal.getDataA(32);
		_courseids = new BigDecimal[10];
		for (int i0=0; i0<10; i0++) _courseids[i0] = marshal.getDataN(9, 0);
		_grades = new BigDecimal[10];
		for (int i0=0; i0<10; i0++) _grades[i0] = marshal.getDataN(1, 1);
		_finalgrade = marshal.getDataN(1, 1);
		sti_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'STP'
	public String getStp_message() {
		if (this.stp_message == null) {
			this.stp_message = "";
		}
		return this.stp_message;
	}

	public void stp(BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (STP_FORMAT, "2", 0, 40, "STP", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		stp_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUPA'
	public String getSupa_message() {
		if (this.supa_message == null) {
			this.supa_message = "";
		}
		return this.supa_message;
	}

	public void supa(BigDecimal _profid, String _pfirstname, String _plastname, String _ptitel, String _pchair) throws BrokerException {

		enterStub();
		buildHeader (SUPA_FORMAT, "6", 0, 40, "SUPA", true, 1110, false, false, 2020);
		marshal.addDataN(_profid, 9, 0);
		marshal.addDataA(_pfirstname, 32);
		marshal.addDataA(_plastname, 32);
		marshal.addDataA(_ptitel, 32);
		marshal.addDataA(_pchair, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		supa_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUPAID'
	public BigDecimal get_profid() {
		if (this._profid == null) {
			this._profid = new BigDecimal(0);
		}
		return this._profid;
	}

	public void supaid() throws BrokerException {

		enterStub();
		buildHeader (SUPAID_FORMAT, "1", 0, 10, "SUPAID", true, 1110, false, false, 2020);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);

		callServer();

		_profid = marshal.getDataN(9, 0);

		leaveStub();


	}

	// IDL program 'SUPI'
	public String get_pfirstname() {
		if (this._pfirstname == null) {
			this._pfirstname = "";
		}
		return this._pfirstname;
	}

	// IDL program 'SUPI'
	public String get_plastname() {
		if (this._plastname == null) {
			this._plastname = "";
		}
		return this._plastname;
	}

	// IDL program 'SUPI'
	public String get_ptitel() {
		if (this._ptitel == null) {
			this._ptitel = "";
		}
		return this._ptitel;
	}

	// IDL program 'SUPI'
	public String get_pchair() {
		if (this._pchair == null) {
			this._pchair = "";
		}
		return this._pchair;
	}

	// IDL program 'SUPI'
	public String getSupi_message() {
		if (this.supi_message == null) {
			this.supi_message = "";
		}
		return this.supi_message;
	}

	public void supi(BigDecimal _profid) throws BrokerException {

		enterStub();
		buildHeader (SUPI_FORMAT, "6", 0, 168, "SUPI", true, 1110, false, false, 2020);
		marshal.addDataN(_profid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		_pfirstname = marshal.getDataA(32);
		_plastname = marshal.getDataA(32);
		_ptitel = marshal.getDataA(32);
		_pchair = marshal.getDataA(32);
		supi_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUPM'
	public String getSupm_message() {
		if (this.supm_message == null) {
			this.supm_message = "";
		}
		return this.supm_message;
	}

	public void supm(BigDecimal _profid, String _pfirstname, String _plastname, String _ptitel, String _pchair) throws BrokerException {

		enterStub();
		buildHeader (SUPM_FORMAT, "6", 0, 40, "SUPM", true, 1110, false, false, 2020);
		marshal.addDataN(_profid, 9, 0);
		marshal.addDataA(_pfirstname, 32);
		marshal.addDataA(_plastname, 32);
		marshal.addDataA(_ptitel, 32);
		marshal.addDataA(_pchair, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		supm_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUPS'
	public Sups_output[] getSups_output() {
		if (this.sups_output == null) {
			this.sups_output = new Sups_output[0];
		}
		return this.sups_output;
	}

	// IDL program 'SUPS'
	public Sups_output getSups_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.sups_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'sups_output'");
		}
		return this.sups_output[index0];
	}

	public void sups() throws BrokerException {

		enterStub();
		buildHeader (SUPS_FORMAT, "8", 0, 178, "SUPS", true, 2000, true, false, 2020);

		callServer();

		int sups_outputIndex0 = super.marshal.getArrayIndex();
		sups_output = new Sups_output[sups_outputIndex0];
		for (int i0=0; i0<sups_outputIndex0; i0++) {
				sups_output[i0] = new Sups_output();
			sups_output[i0].get(marshal);
		}

		leaveStub();


	}

	// IDL program 'SUSA'
	public String getSusa_message() {
		if (this.susa_message == null) {
			this.susa_message = "";
		}
		return this.susa_message;
	}

	public void susa(BigDecimal _studentid, String _firstname, String _lastname, String _addressline1, String _addressline2, String _degreeprogram, String _dob, String _email, String _phone) throws BrokerException {

		enterStub();
		buildHeader (SUSA_FORMAT, "10", 0, 40, "SUSA", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		marshal.addDataA(_firstname, 32);
		marshal.addDataA(_lastname, 32);
		marshal.addDataA(_addressline1, 32);
		marshal.addDataA(_addressline2, 32);
		marshal.addDataA(_degreeprogram, 32);
		marshal.addDataA(_dob, 10);
		marshal.addDataA(_email, 32);
		marshal.addDataA(_phone, 32);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		susa_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUSAID'
	public BigDecimal get_studentid() {
		if (this._studentid == null) {
			this._studentid = new BigDecimal(0);
		}
		return this._studentid;
	}

	public void susaid() throws BrokerException {

		enterStub();
		buildHeader (SUSAID_FORMAT, "1", 0, 10, "SUSAID", true, 1110, false, false, 2020);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 9, 0);

		callServer();

		_studentid = marshal.getDataN(9, 0);

		leaveStub();


	}

	// IDL program 'SUSI'
	public String getSusi_firstname() {
		if (this.susi_firstname == null) {
			this.susi_firstname = "";
		}
		return this.susi_firstname;
	}

	// IDL program 'SUSI'
	public String getSusi_lastname() {
		if (this.susi_lastname == null) {
			this.susi_lastname = "";
		}
		return this.susi_lastname;
	}

	// IDL program 'SUSI'
	public String get_addressline1() {
		if (this._addressline1 == null) {
			this._addressline1 = "";
		}
		return this._addressline1;
	}

	// IDL program 'SUSI'
	public String get_addressline2() {
		if (this._addressline2 == null) {
			this._addressline2 = "";
		}
		return this._addressline2;
	}

	// IDL program 'SUSI'
	public String getSusi_degreeprogram() {
		if (this.susi_degreeprogram == null) {
			this.susi_degreeprogram = "";
		}
		return this.susi_degreeprogram;
	}

	// IDL program 'SUSI'
	public String get_email() {
		if (this._email == null) {
			this._email = "";
		}
		return this._email;
	}

	// IDL program 'SUSI'
	public String get_phone() {
		if (this._phone == null) {
			this._phone = "";
		}
		return this._phone;
	}

	// IDL program 'SUSI'
	public String getSusi_dob() {
		if (this.susi_dob == null) {
			this.susi_dob = "";
		}
		return this.susi_dob;
	}

	// IDL program 'SUSI'
	public BigDecimal getSusi_term() {
		if (this.susi_term == null) {
			this.susi_term = new BigDecimal(0);
		}
		return this.susi_term;
	}

	// IDL program 'SUSI'
	public String get_registered() {
		if (this._registered == null) {
			this._registered = "";
		}
		return this._registered;
	}

	// IDL program 'SUSI'
	public BigDecimal get_active() {
		if (this._active == null) {
			this._active = new BigDecimal(0);
		}
		return this._active;
	}

	// IDL program 'SUSI'
	public String getSusi_message() {
		if (this.susi_message == null) {
			this.susi_message = "";
		}
		return this.susi_message;
	}

	public void susi(BigDecimal _studentid) throws BrokerException {

		enterStub();
		buildHeader (SUSI_FORMAT, "13", 0, 290, "SUSI", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 32);
		if (!super.compression) marshal.addDataA(" ", 10);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 3, 0);
		if (!super.compression) marshal.addDataA(" ", 10);
		if (!super.compression) marshal.addDataN(new BigDecimal(0), 1, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		susi_firstname = marshal.getDataA(32);
		susi_lastname = marshal.getDataA(32);
		_addressline1 = marshal.getDataA(32);
		_addressline2 = marshal.getDataA(32);
		susi_degreeprogram = marshal.getDataA(32);
		_email = marshal.getDataA(32);
		_phone = marshal.getDataA(32);
		susi_dob = marshal.getDataA(10);
		susi_term = marshal.getDataN(3, 0);
		_registered = marshal.getDataA(10);
		_active = marshal.getDataN(1, 0);
		susi_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUSM'
	public String getSusm_message() {
		if (this.susm_message == null) {
			this.susm_message = "";
		}
		return this.susm_message;
	}

	public void susm(BigDecimal _studentid, String _firstname, String _lastname, String _addressline1, String _addressline2, String _email, String _phone, String _dob, BigDecimal _term, BigDecimal _active) throws BrokerException {

		enterStub();
		buildHeader (SUSM_FORMAT, "11", 0, 40, "SUSM", true, 1110, false, false, 2020);
		marshal.addDataN(_studentid, 9, 0);
		marshal.addDataA(_firstname, 32);
		marshal.addDataA(_lastname, 32);
		marshal.addDataA(_addressline1, 32);
		marshal.addDataA(_addressline2, 32);
		marshal.addDataA(_email, 32);
		marshal.addDataA(_phone, 32);
		marshal.addDataA(_dob, 10);
		marshal.addDataN(_term, 3, 0);
		marshal.addDataN(_active, 1, 0);
		if (!super.compression) marshal.addDataA(" ", 40);

		callServer();

		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(32);
		if (!super.compression) super.marshal.skipData(10);
		if (!super.compression) super.marshal.skipData(4);
		if (!super.compression) super.marshal.skipData(2);
		susm_message = marshal.getDataA(40);

		leaveStub();


	}

	// IDL program 'SUSS'
	public Suss_output[] getSuss_output() {
		if (this.suss_output == null) {
			this.suss_output = new Suss_output[0];
		}
		return this.suss_output;
	}

	// IDL program 'SUSS'
	public Suss_output getSuss_output(int index0) throws ArrayIndexOutOfBoundsException {
		if (this.suss_output == null) {
			throw new ArrayIndexOutOfBoundsException("Undefined parameter 'suss_output'");
		}
		return this.suss_output[index0];
	}

	public void suss() throws BrokerException {

		enterStub();
		buildHeader (SUSS_FORMAT, "14", 0, 224, "SUSS", true, 2000, true, false, 2020);

		callServer();

		int suss_outputIndex0 = super.marshal.getArrayIndex();
		suss_output = new Suss_output[suss_outputIndex0];
		for (int i0=0; i0<suss_outputIndex0; i0++) {
				suss_output[i0] = new Suss_output();
			suss_output[i0].get(marshal);
		}

		leaveStub();


	}

	public static final Method enterStubMethod = getStubMethod("enterClientStub");
	public static final Method leaveStubMethod = getStubMethod("leaveClientStub");

	private static Method getStubMethod(String name) {
		Method method = null ;
		try {
			method = RPCService.class.getMethod(name , null ) ;
		} catch ( Exception ex ) {}
		return method ;
	}
	private void enterStub() {
		if ( enterStubMethod != null ) {
			try {
				enterStubMethod.invoke ( this , null ) ;
			} catch ( Exception ex ) {} 
		}
	}
	private void leaveStub() {
		if ( leaveStubMethod != null ) {
			try {
				leaveStubMethod.invoke ( this , null ) ;
			} catch ( Exception ex ) {}
		}
	}
}
